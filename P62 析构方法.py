# oop(面向对象编程)三大特征:封装、继承、多态
# 析构方法的概述（类中的魔术方法）魔术方法不需要手动调用，会自动调用
# 当一个对象被删除或者被销毁时，python解释器也会默认调用一个方法，
# 这个方法为__del__()方法，也叫析构方法
class Animal:
    def __init__(self,name):
        self.name=name
        print('这是构造初始化方法')
        pass
    def __del__(self):
        """
        当在某个作用域下面，没有被引用的情况下 解析器会自动调用此函数 来释放内存空间
        前提是整个程序执行完成后 Process finished with exit code 0
        主要的应用就是来操作 对象的释放 释放完对象就不能再使用
        :return:
        """
        print('这是析构方法')
        print('%s这个对象被彻底清理了，内存空间也释放了'%(self.name))
    # __init__构造方法先执行，__del__析构方法后执行
    pass

cat=Animal('猫')
dog=Animal('狗')
del dog        #想在某个时刻或条件删除对象可以手动删除，不用等整个程序运行完
input('程序等待中....')  #等待用户输入以结束程序

# 析构方法总结
# 1.当整个程序脚本执行完毕后会自动调用__del__方法
# 2.当对象被手动销毁时也会自动调用__del__方法
# 3.析构函数一般用于资源回收，利用__del__方法销毁对象，回收内存等资源
# 4.就算没声明__del__方法，当整个程序脚本执行完解析器也会自动执行



















