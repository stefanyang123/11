# python中能灵活的自定义函数，还内置了很多函数直接调用
# 在编写程序中，有某一功能代码出现很多次，但是为了提高编写效率以及代码的重用
# 把具有独立功能的代码块组织为一个小模块，就是函数
# 为什么使用函数，复用最大化以及最小化冗余代码，使整体结构清晰，问题局部化

# 定义
# def 函数名(参数列表，根据需要多少都行0-n个):
#     函数体[一系列的python语句，表示独立的功能]
# 调用
# 函数名（）
#      本质上是取执行函数定义里面的代码块，调用前必须先定义

print('------小杨的个人信息------')
print('小杨的身高是%f'%182)
print('小杨的体重是%f'%130)
print('小杨的爱好是%s'%'篮球')
print('小杨的专业是%s'%'市场营销')
#需要多次打印小杨的个人信息时，不可能一个个的复制过去，此时用函数将其封装起来可以精简代码

print('------函数的定义------')

# 函数的定义
def printInfo():
    '''
    函数的备注  打印小杨个人信息
    :return:
    '''
    print('小杨的身高是%f' % 182)
    print('小杨的体重是%f' % 130)
    print('小杨的爱好是%s' % '篮球')
    print('小杨的专业是%s' % '市场营销')
    pass
#函数的调用
printInfo()
print('我是其他的代码....')


print('------函数加入参数------')
# 进一步完善，输出不同人的信
# 方案：通过传入参数来解决
def printInfo(name,height,weight,hobby,pro):
    '''
    输出个人信息
    :return:
    '''
    print('%s的身高是%f' % (name,height))
    print('%s的体重是%f' % (name,weight))
    print('%s的爱好是%s' % (name,hobby))
    print('%s的专业是%s' % (name,pro))
    pass

# 调用带参数的函数
printInfo('小李',189,200,'打篮球','信管')










































